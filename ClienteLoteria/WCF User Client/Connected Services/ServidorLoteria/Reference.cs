//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_User_Client.ServidorLoteria {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CuentaSet", Namespace="http://schemas.datacontract.org/2004/07/AccesoBD")]
    [System.SerializableAttribute()]
    public partial class CuentaSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string correoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> fotoPerfilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> puntajeMaximoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contraseña {
            get {
                return this.contraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.contraseñaField, value) != true)) {
                    this.contraseñaField = value;
                    this.RaisePropertyChanged("contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string correo {
            get {
                return this.correoField;
            }
            set {
                if ((object.ReferenceEquals(this.correoField, value) != true)) {
                    this.correoField = value;
                    this.RaisePropertyChanged("correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> fotoPerfil {
            get {
                return this.fotoPerfilField;
            }
            set {
                if ((this.fotoPerfilField.Equals(value) != true)) {
                    this.fotoPerfilField = value;
                    this.RaisePropertyChanged("fotoPerfil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreUsuario {
            get {
                return this.nombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreUsuarioField, value) != true)) {
                    this.nombreUsuarioField = value;
                    this.RaisePropertyChanged("nombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> puntajeMaximo {
            get {
                return this.puntajeMaximoField;
            }
            set {
                if ((this.puntajeMaximoField.Equals(value) != true)) {
                    this.puntajeMaximoField = value;
                    this.RaisePropertyChanged("puntajeMaximo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PuntajeUsuario", Namespace="http://schemas.datacontract.org/2004/07/ServidorLoteria")]
    [System.SerializableAttribute()]
    public partial class PuntajeUsuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> puntajeMaximoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreUsuario {
            get {
                return this.nombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreUsuarioField, value) != true)) {
                    this.nombreUsuarioField = value;
                    this.RaisePropertyChanged("nombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> puntajeMaximo {
            get {
                return this.puntajeMaximoField;
            }
            set {
                if ((this.puntajeMaximoField.Equals(value) != true)) {
                    this.puntajeMaximoField = value;
                    this.RaisePropertyChanged("puntajeMaximo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorLoteria.IServicioCuentaUsuario", CallbackContract=typeof(WCF_User_Client.ServidorLoteria.IServicioCuentaUsuarioCallback))]
    public interface IServicioCuentaUsuario {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/IniciarSesion")]
        void IniciarSesion(string nombreUsuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/IniciarSesion")]
        System.Threading.Tasks.Task IniciarSesionAsync(string nombreUsuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/CerrarSesion")]
        void CerrarSesion(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/CerrarSesion")]
        System.Threading.Tasks.Task CerrarSesionAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/GuardarCuentaUsuario")]
        void GuardarCuentaUsuario(WCF_User_Client.ServidorLoteria.CuentaSet cuenta);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/GuardarCuentaUsuario")]
        System.Threading.Tasks.Task GuardarCuentaUsuarioAsync(WCF_User_Client.ServidorLoteria.CuentaSet cuenta);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/EnviarMensajeChat")]
        void EnviarMensajeChat(string nombreUsuario, string mensaje, string nombreRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/EnviarMensajeChat")]
        System.Threading.Tasks.Task EnviarMensajeChatAsync(string nombreUsuario, string mensaje, string nombreRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/ModificarCuentaUsuario")]
        void ModificarCuentaUsuario(WCF_User_Client.ServidorLoteria.CuentaSet cuenta);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/ModificarCuentaUsuario")]
        System.Threading.Tasks.Task ModificarCuentaUsuarioAsync(WCF_User_Client.ServidorLoteria.CuentaSet cuenta);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/RegistrarPuntajeMáximo")]
        void RegistrarPuntajeMáximo(string nombreUsuario, int puntajeMaximo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/RegistrarPuntajeMáximo")]
        System.Threading.Tasks.Task RegistrarPuntajeMáximoAsync(string nombreUsuario, int puntajeMaximo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/SolicitarPuntajes")]
        void SolicitarPuntajes();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/SolicitarPuntajes")]
        System.Threading.Tasks.Task SolicitarPuntajesAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/EnviarInivitacion")]
        void EnviarInivitacion(string mensaje, string nombreUsuario, string tematica, string nombreRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/EnviarInivitacion")]
        System.Threading.Tasks.Task EnviarInivitacionAsync(string mensaje, string nombreUsuario, string tematica, string nombreRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/ConfirmacionInvitacion")]
        void ConfirmacionInvitacion(bool opcion, string nombreUsuario, string tematica, string emisor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/ConfirmacionInvitacion")]
        System.Threading.Tasks.Task ConfirmacionInvitacionAsync(bool opcion, string nombreUsuario, string tematica, string emisor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/FinalizarPartida")]
        void FinalizarPartida(string nombreUsuario, string nombreRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/FinalizarPartida")]
        System.Threading.Tasks.Task FinalizarPartidaAsync(string nombreUsuario, string nombreRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/ActualizarUsuario")]
        void ActualizarUsuario(string nombreUsuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/ActualizarUsuario")]
        System.Threading.Tasks.Task ActualizarUsuarioAsync(string nombreUsuario, string contraseña);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioCuentaUsuarioCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/MensajeChat")]
        void MensajeChat(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/Respuesta")]
        void Respuesta(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/DevuelveCuenta")]
        void DevuelveCuenta(WCF_User_Client.ServidorLoteria.CuentaSet cuenta);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/DevuelvePuntajes")]
        void DevuelvePuntajes(WCF_User_Client.ServidorLoteria.PuntajeUsuario[] puntajes);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/RecibirInvitacion")]
        void RecibirInvitacion(string nombreUsuario, string mensaje, string tematica);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/RecibirConfirmacion")]
        void RecibirConfirmacion(bool opcion, string tematica, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioCuentaUsuario/RecibirFinPartida")]
        void RecibirFinPartida(string mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioCuentaUsuarioChannel : WCF_User_Client.ServidorLoteria.IServicioCuentaUsuario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioCuentaUsuarioClient : System.ServiceModel.DuplexClientBase<WCF_User_Client.ServidorLoteria.IServicioCuentaUsuario>, WCF_User_Client.ServidorLoteria.IServicioCuentaUsuario {
        
        public ServicioCuentaUsuarioClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServicioCuentaUsuarioClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServicioCuentaUsuarioClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioCuentaUsuarioClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioCuentaUsuarioClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void IniciarSesion(string nombreUsuario, string contraseña) {
            base.Channel.IniciarSesion(nombreUsuario, contraseña);
        }
        
        public System.Threading.Tasks.Task IniciarSesionAsync(string nombreUsuario, string contraseña) {
            return base.Channel.IniciarSesionAsync(nombreUsuario, contraseña);
        }
        
        public void CerrarSesion(string nombreUsuario) {
            base.Channel.CerrarSesion(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task CerrarSesionAsync(string nombreUsuario) {
            return base.Channel.CerrarSesionAsync(nombreUsuario);
        }
        
        public void GuardarCuentaUsuario(WCF_User_Client.ServidorLoteria.CuentaSet cuenta) {
            base.Channel.GuardarCuentaUsuario(cuenta);
        }
        
        public System.Threading.Tasks.Task GuardarCuentaUsuarioAsync(WCF_User_Client.ServidorLoteria.CuentaSet cuenta) {
            return base.Channel.GuardarCuentaUsuarioAsync(cuenta);
        }
        
        public void EnviarMensajeChat(string nombreUsuario, string mensaje, string nombreRemitente) {
            base.Channel.EnviarMensajeChat(nombreUsuario, mensaje, nombreRemitente);
        }
        
        public System.Threading.Tasks.Task EnviarMensajeChatAsync(string nombreUsuario, string mensaje, string nombreRemitente) {
            return base.Channel.EnviarMensajeChatAsync(nombreUsuario, mensaje, nombreRemitente);
        }
        
        public void ModificarCuentaUsuario(WCF_User_Client.ServidorLoteria.CuentaSet cuenta) {
            base.Channel.ModificarCuentaUsuario(cuenta);
        }
        
        public System.Threading.Tasks.Task ModificarCuentaUsuarioAsync(WCF_User_Client.ServidorLoteria.CuentaSet cuenta) {
            return base.Channel.ModificarCuentaUsuarioAsync(cuenta);
        }
        
        public void RegistrarPuntajeMáximo(string nombreUsuario, int puntajeMaximo) {
            base.Channel.RegistrarPuntajeMáximo(nombreUsuario, puntajeMaximo);
        }
        
        public System.Threading.Tasks.Task RegistrarPuntajeMáximoAsync(string nombreUsuario, int puntajeMaximo) {
            return base.Channel.RegistrarPuntajeMáximoAsync(nombreUsuario, puntajeMaximo);
        }
        
        public void SolicitarPuntajes() {
            base.Channel.SolicitarPuntajes();
        }
        
        public System.Threading.Tasks.Task SolicitarPuntajesAsync() {
            return base.Channel.SolicitarPuntajesAsync();
        }
        
        public void EnviarInivitacion(string mensaje, string nombreUsuario, string tematica, string nombreRemitente) {
            base.Channel.EnviarInivitacion(mensaje, nombreUsuario, tematica, nombreRemitente);
        }
        
        public System.Threading.Tasks.Task EnviarInivitacionAsync(string mensaje, string nombreUsuario, string tematica, string nombreRemitente) {
            return base.Channel.EnviarInivitacionAsync(mensaje, nombreUsuario, tematica, nombreRemitente);
        }
        
        public void ConfirmacionInvitacion(bool opcion, string nombreUsuario, string tematica, string emisor) {
            base.Channel.ConfirmacionInvitacion(opcion, nombreUsuario, tematica, emisor);
        }
        
        public System.Threading.Tasks.Task ConfirmacionInvitacionAsync(bool opcion, string nombreUsuario, string tematica, string emisor) {
            return base.Channel.ConfirmacionInvitacionAsync(opcion, nombreUsuario, tematica, emisor);
        }
        
        public void FinalizarPartida(string nombreUsuario, string nombreRemitente) {
            base.Channel.FinalizarPartida(nombreUsuario, nombreRemitente);
        }
        
        public System.Threading.Tasks.Task FinalizarPartidaAsync(string nombreUsuario, string nombreRemitente) {
            return base.Channel.FinalizarPartidaAsync(nombreUsuario, nombreRemitente);
        }
        
        public void ActualizarUsuario(string nombreUsuario, string contraseña) {
            base.Channel.ActualizarUsuario(nombreUsuario, contraseña);
        }
        
        public System.Threading.Tasks.Task ActualizarUsuarioAsync(string nombreUsuario, string contraseña) {
            return base.Channel.ActualizarUsuarioAsync(nombreUsuario, contraseña);
        }
    }
}
